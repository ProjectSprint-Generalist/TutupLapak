# Default values for tutuplapak
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Global configuration
global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""

# TutupLapak application configuration
app:
  name: tutuplapak
  replicaCount: 3
  
  image:
    repository: tutuplapak
    tag: "latest"
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 8080
    targetPort: 8080
    metricsPort: 9090
    metricsTargetPort: 9090
  
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/client-max-body-size: "100m"
      nginx.ingress.kubernetes.io/proxy-body-size: "100m"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    hosts:
      - host: tutuplapak.local
        paths:
          - path: /api
            pathType: Prefix
          - path: /metrics
            pathType: Prefix
    tls: []
  
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  
  nodeSelector: {}
  tolerations: []
  affinity: {}
  
  # Environment variables
  env:
    - name: ENVIRONMENT
      value: "production"
    - name: SERVER_HOST
      value: "0.0.0.0"
    - name: SERVER_PORT
      value: "8080"
    - name: JWT_SECRET
      valueFrom:
        secretKeyRef:
          name: tutuplapak-secrets
          key: jwt-secret
    - name: JWT_EXPIRY
      value: "24h"
  
  # Health checks
  livenessProbe:
    httpGet:
      path: /api/v1/health
      port: 8080
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  
  readinessProbe:
    httpGet:
      path: /api/v1/health/ready
      port: 8080
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3

# Database configuration
database:
  enabled: true
  type: postgresql
  
  # PostgreSQL configuration
  postgresql:
    enabled: true
    auth:
      postgresPassword: "postgres"
      database: "tutuplapak"
      username: "tutuplapak"
    primary:
      persistence:
        enabled: true
        size: 10Gi
        storageClass: ""
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 250m
          memory: 256Mi
    service:
      type: ClusterIP
      port: 5432

# MinIO object storage configuration
minio:
  enabled: true
  auth:
    rootUser: "minioadmin"
    rootPassword: "minioadmin"
  defaultBuckets: "tutuplapak-uploads"
  persistence:
    enabled: true
    size: 50Gi
    storageClass: ""
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 256Mi
  service:
    type: ClusterIP
    port: 9000
    consolePort: 9001

# Prometheus monitoring configuration
prometheus:
  enabled: true
  server:
    persistentVolume:
      enabled: true
      size: 10Gi
      storageClass: ""
    resources:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi
    service:
      type: ClusterIP
      port: 9090
  alertmanager:
    enabled: true
    persistentVolume:
      enabled: true
      size: 2Gi
  kubeStateMetrics:
    enabled: true
  nodeExporter:
    enabled: true

# Grafana configuration
grafana:
  enabled: true
  adminPassword: "admin"
  persistence:
    enabled: true
    size: 5Gi
    storageClass: ""
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi
  service:
    type: ClusterIP
    port: 3000
  ingress:
    enabled: true
    className: "nginx"
    hosts:
      - host: grafana.tutuplapak.local
        paths:
          - path: /
            pathType: Prefix
    tls: []

# Secrets configuration
secrets:
  create: true
  data:
    jwt-secret: "team-generalist"
    db-password: "postgres"
    minio-secret: "minioadmin"
    # Google Cloud Service Account Key (base64 encoded)
    # To encode: cat ps-key.json | base64 -w 0
    gcp-service-account-key: "ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAicHJvamVjdHNwcmludC0wMDAwMDEiLAogICJwcml2YXRlX2tleV9pZCI6ICI2YjI5YmIyZWRhZmZlMDljMGQ3ZmQxZThlNzQ4YjYzYWYyMDU1MjE5IiwKICAicHJpdmF0ZV9rZXkiOiAiLS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tXG5NSUlFdlFJQkFEQU5CZ2txaGtpRzl3MEJBUUVGQUFTQ0JLY3dnZ1NqQWdFQUFvSUJBUUN6d1p4ci9Wc3ZRRVI5XG5CSG85VGFHR0hiamptYzlJMXEwbHdFakhHQUJDb1NqSWQ3M1ZqOUJpYzNTUHBMQ2d6TndrWm1pUFU0UzJIWXN4XG56SllGdWNXaEI0d0Z3TUcrZjAxUUg0L2ZkVHFLSnVzdVExZW03YU5KZlBLTzJXZ1A4RGF4Wk1jeXJTVU9POXRVXG53VVpVdHluK0RNY0FwVDkzSnlTLzFJR0I0WXhtcjFGa1pwRjRjcnRNTFJwMUR0MHpzTmxsWmJDeVVxM2VRT010XG5jNHh0K1ZRKzJ0TXhhMXpGTkFZRkFqcVpnRVlzMVY0MDVEK1Q0R2xseHJHcHltVjdIVkpPZFg2T3NnajAveGswXG5IbGcvdWlNLzNpZzdCUitFQktMdHRsRGE3blhwYmtxMTk5VEF3OHNTRUlMVGlMVUZncHI4RDdBVnhqckJRZVRVXG5OVUpGUXBuekFnTUJBQUVDZ2dFQUdIZWppMzF1WW5XY2ZPblZtNitMNjEzelV5T1Y5K09rcU0xTitxK1ZKWHliXG5PUUkzZURDOW5CRDhEaXRNRVc4aERlRlVuU0d3b0R0UVBZU0w3UmFXeEc3ckM4TnJlN3NITW45QlRaaSswWnd2XG5pZG9IdmNSOTQ5eGFoY0FvN25aemMxejAwanlJSFRKZmpkOUs2L0FNaXJTQmgrQjJUWWtwOHVTQmhrVEZvQnBFXG54YkM4Tk5RaGFsbXBIbDI0bmVKWGk5ZExZOXhqVzBtK2N0WStlV3VNU1ZYeFhpSkNHVlJnQ2c1eGVmOGRtN3NRXG5QRWFwdS95Y1hIOFR6b1lRRkhyV05oeXBuYWp5WnhLRFVXRG80RGdzZWpUK1ZVTW40blkxdFF5NjJuRS8reWEzXG5KcTlSR2txNUdxQloxekpTY3dKOVdaUGpndjdaRHIyVXRwd3E4bTUyeFFLQmdRRDlMVm90QmZsLzlwS3VvMG1KXG53Rit6SWtjVGJNUHd5akVkaFlSU1ZSRWlJV2Y5YnBaR2xuTjJWeklpWURDZzVoMzlWSDF5YklnNHRqRWZaOUtnXG5LSlp0VlJSd2xzMVFld3N1QTY0OGJlcFRqV0VwSDd0eG42ZGU3TTdOSGxWbjFvYTgxNVhFVCtOUFZvR1p2akh3XG4vWi9meWRLR2NLTGVQU1pKWGtHNDFraGREd0tCZ1FDMXdyRkFLODgvTWQ5QkMxdWFib283VG85dkJVQjVHaXZmXG4rK25aKzdFZVZNV0pZUmtRdmVtaHUxK0dwOENrQ0VQQllNVTNvaE5nZXE1dDdGWkJlNWlZZDRaSW1uTjl0Mzk2XG4zbHJ6YzhSbDh0OTQ3QWwyb1hzbVVvbVd5WVg1R1RaZzlaSnBlU0h1bGcwanF6ays1K2RRQlplb3VRNzcvT3dWXG50V0NQQnRsODNRS0JnUURETlF1NWVValZyR1dPdDZJRXowbzZrV3hpQXRQVlBlQysxV3FnSEt6NE51KzZUV0ViXG5EZmY2ditLTTlNT3AyNlExNXNaT3luWUIzQ0JtQ2FReUR2bGxWVnRNTUVvZ0NxOGxESHQwWm45dGFxNEdpa3Y1XG5vTkxvOHdmRXllV3FDWk9iMlZIRnFwOG1WaG5aVS9lbnk3WlFVNG02VlBDUEVIRUwwdHd6eXl6Q2F3S0JnSEFEXG5IOER3UHJRdlErcU4yVkgrdFdsL0xKMjZtdFVHNytzRkVFU3ArNms1ak5MdzU4V05oQ0dMbTM4Y2VuZWNNRVZJXG5JY0g3Ty8zRkhTSFk5Lzg2Ny90bURYZEkxOHV0L2YzMmNnNStWWmFPYW5IVzVLNGJMZzJiNS9icEVvdEVvbUoyXG5kRmhUc2ptYWQxWjMrcnR0cHZ1RnRzVGY1d0FjQ2xJR2lROGJwWVJ4QW9HQUxUUk10bzFsL0hEQ2l0ako3N1lWXG4rMFB4RXVVK2wwSWdUOUl6dTVxWEVvak5IK1dJckF0WUZ1QlhHUnVQRTQrazRGZ1M3ejRiWkgwK0FMOGdzeEJDXG5ORjl5K3VNMHgwYnpSU1I1ZHlUekxkQXZXQjdOcitXbVBadFZWNXdDK0hYa1dPTjduVnc4RGd5WnVPZUlwc2lYXG5sNVh2eFZybmR3RmNRTnFFcUU5cjZ3Zz1cbi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS1cbiIsCiAgImNsaWVudF9lbWFpbCI6ICJwcm9qZWN0c3ByaW50LXNlcnZpY2UtYWNjb3VudEBwcm9qZWN0c3ByaW50LTAwMDAwMS5pYW0uZ3NlcnZpY2VhY2NvdW50LmNvbSIsCiAgImNsaWVudF9pZCI6ICIxMDk2NjYwMDQ5MjQ3OTQyOTQ0MTYiLAogICJhdXRoX3VyaSI6ICJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvYXV0aCIsCiAgInRva2VuX3VyaSI6ICJodHRwczovL29hdXRoMi5nb29nbGVhcGlzLmNvbS90b2tlbiIsCiAgImF1dGhfcHJvdmlkZXJfeDUwOV9jZXJ0X3VybCI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9vYXV0aDIvdjEvY2VydHMiLAogICJjbGllbnRfeDUwOV9jZXJ0X3VybCI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9yb2JvdC92MS9tZXRhZGF0YS94NTA5L3Byb2plY3RzcHJpbnQtc2VydmljZS1hY2NvdW50JTQwcHJvamVjdHNwcmludC0wMDAwMDEuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iLAogICJ1bml2ZXJzZV9kb21haW4iOiAiZ29vZ2xlYXBpcy5jb20iCn0="

# ConfigMap configuration
configMap:
  create: true
  data:
    DB_HOST: "{{ include \"tutuplapak.postgresql.fullname\" . }}-primary"
    DB_PORT: "5432"
    DB_NAME: "tutuplapak"
    DB_USER: "tutuplapak"
    DB_SSL_MODE: "disable"
    MINIO_ENDPOINT: "{{ include \"tutuplapak.minio.fullname\" . }}:9000"
    MINIO_ACCESS_KEY: "minioadmin"
    MINIO_USE_SSL: "false"
    MINIO_BUCKET: "tutuplapak-uploads"
    PROMETHEUS_ENABLED: "true"
    METRICS_PORT: "9090"

# ServiceMonitor for Prometheus
serviceMonitor:
  enabled: true
  interval: 30s
  scrapeTimeout: 10s
  labels: {}
  annotations: {}

# PodDisruptionBudget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# NetworkPolicy
networkPolicy:
  enabled: false
  ingress: []
  egress: []

# PodSecurityPolicy
podSecurityPolicy:
  enabled: false

# Service Account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Security Context
podSecurityContext:
  fsGroup: 1001
  runAsNonRoot: true
  runAsUser: 1001

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1001

# Autoscaling
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
